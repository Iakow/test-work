{"mappings":"uBAI2CA,GACzC,gBCLyCA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,CACtB,IAAK,IAAIG,EAAI,EAAGC,EAAO,IAAIH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAC5DC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GDDFE,CAAkBN,aELcO,GACvC,GAAIC,OAAOC,YAAYC,OAAOH,IAAkD,uBAAzCG,OAAOC,UAAUC,SAASC,KAAKN,GAAgC,OAAON,MAAMa,KAAKP,GFIvFQ,CAAgBf,eGJjD,MAAM,IAAIgB,UAAU,mDHIqCC,GIL3D,IAAMC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,aAEtEC,IACMC,SAASC,KACtBD,SAASC,KAAKC,UAAa,2LA8C7BC,OAAOC,wBA1BgBC,EAPLC,EAAIC,UAAAtB,OAAA,QAAA,IAAAsB,UAAA,GAAAA,UAAA,GAAGT,EACvBC,IAEA,IAAMS,EAAOR,SAASS,eAAe,OAC/BC,GAAUC,iBAAiBH,GAAMI,MAAMC,MAAM,MAAM,GACnDC,GAAUH,iBAAiBH,GAAMO,OAAOF,MAAM,MAAM,GACpDG,EAAON,EAASJ,EAAKrB,OACrBgC,GAAeZ,EAAAa,MAAKC,IAALC,MAAAf,EAAIgB,EAAQf,IAEjCN,SAASS,eAAe,aAAaa,UAAYL,EACjDjB,SAASS,eAAe,gBAAgBa,UAAYhB,EAAKrB,OAEzD,IAAMsC,EAAWvB,SAASwB,yBAE1BlB,EAAKmB,SAAQ,SAACC,GACZ,IAAMC,EAAM3B,SAAS4B,cAAc,OACnCD,EAAIE,MAAMjB,MAAS,GAAOkB,OAALd,EAAK,MAC1BW,EAAIE,MAAMd,OAAU,GAAkCe,OAA/BhB,EAASG,EAAgBS,EAAM,MAElDA,EAAQ,EACVC,EAAII,UAAUC,IAAI,SACTN,EAAQ,GAAKA,EAAQ,GAC9BC,EAAII,UAAUC,IAAI,UAElBL,EAAII,UAAUC,IAAI,OAGpBT,EAASU,YAAYN,MAGvBnB,EAAKyB,YAAYV","sources":["Projects/test-work/node_modules/@swc/helpers/src/_to_consumable_array.js","Projects/test-work/node_modules/@swc/helpers/src/_array_without_holes.js","Projects/test-work/node_modules/@swc/helpers/src/_iterable_to_array.js","Projects/test-work/node_modules/@swc/helpers/src/_non_iterable_spread.js","Projects/test-work/src/bar_chart/bar_chart.js"],"sourcesContent":["import arrayWithoutHoles from './_array_without_holes';\nimport iterableToArray from './_iterable_to_array';\nimport nonIterableSpread from './_non_iterable_spread';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n","const example = [5, 8, 2, 1, 15, 2, 3, 5, 9, 11, 10, 4, 3, 14, 1, 7, 10, 3, 2, 13];\n\nfunction mountApp() {\n  const body = document.body;\n  document.body.innerHTML = `\n    <div id=\"app\">\n      <span id=\"max-label\">\n      </span>\n      <span id=\"zero-label\">\n        0\n      </span>\n      <span id=\"points-label\">\n      </span>\n    </div> \n  `\n}\n\nfunction barChart(data = example) {\n  mountApp();\n\n  const root = document.getElementById(\"app\");\n  const chartW = +getComputedStyle(root).width.split(\"px\")[0];\n  const chartH = +getComputedStyle(root).height.split(\"px\")[0];\n  const barW = chartW / data.length;\n  const maxDataValue = Math.max(...data);\n\n  document.getElementById(\"max-label\").innerText = maxDataValue;\n  document.getElementById(\"points-label\").innerText = data.length;\n\n  const fragment = document.createDocumentFragment();\n\n  data.forEach((value) => {\n    const bar = document.createElement(\"div\");\n    bar.style.width = `${barW}px`;\n    bar.style.height = `${(chartH / maxDataValue) * value}px`;\n\n    if (value < 6) {\n      bar.classList.add(\"green\");\n    } else if (value > 5 && value < 11) {\n      bar.classList.add(\"yellow\");\n    } else {\n      bar.classList.add(\"red\");\n    }\n\n    fragment.appendChild(bar);\n  });\n\n  root.appendChild(fragment);\n}\n\nwindow.barChart = barChart;\n"],"names":["arr","Array","isArray","i","arr2","length","$0f31268bada65291$export$2e2bcd8739ae039","iter","Symbol","iterator","Object","prototype","toString","call","from","$d7465c99f230d4b0$export$2e2bcd8739ae039","TypeError","$1ebbd18473e623da$export$2e2bcd8739ae039","$6bfc24b6757dd7f4$var$example","$6bfc24b6757dd7f4$var$mountApp","document","body","innerHTML","window","barChart","_Math","data","arguments","root","getElementById","chartW","getComputedStyle","width","split","chartH","height","barW","maxDataValue","Math","max","apply","$e22a12a813ffce53$export$2e2bcd8739ae039","innerText","fragment","createDocumentFragment","forEach","value","bar","createElement","style","concat","classList","add","appendChild"],"version":3,"file":"index.c1d612fb.js.map"}